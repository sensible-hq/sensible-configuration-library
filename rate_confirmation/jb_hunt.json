{
    "fields": [
      {
        "id": "load_id",
        "anchor": {
          "match": [
            {
              "type": "startsWith",
              "text": "Carrier Confirmation for Load",
              "isCaseSensitive": true
            }
          ]
        },
        "method": {
          "id": "label",
          "position": "right"
        }
      },
      {
        "id": "rate",
        "type": "currency",
        "anchor": {
          "match": [
            {
              "type": "startsWith",
              "text": "Total Rate"
            }
          ]
        },
        "method": {
          "id": "label",
          "position": "right"
        }
      },
      {
        "id": "broker_contact_name",
        "anchor": "J.B. Hunt Contact",
        "method": {
          "id": "label",
          "position": "below"
        }
      },
      {
        "id": "broker_contact_email",
        "anchor": {
          "start": {
            "type": "startsWith",
            "text": "J.B. Hunt Contact",
            "isCaseSensitive": true
          },
          "match": {
            "type": "regex",
            "pattern": "^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$"
          },
          "end": "phone"
        },
        "method": {
          "id": "passthrough"
        }
      },
      {
        "id": "broker_contact_phone",
        "anchor": {
          "start": {
            "type": "startsWith",
            "text": "J.B. Hunt Contact",
            "isCaseSensitive": true
          },
          "match": {
            "type": "regex",
            "pattern": "^[0-9\\s\\(\\)\\+\\-]+ phone$"
          },
          "end": "fax"
        },
        "method": {
          "id": "passthrough",
          "wordFilters": [
            "phone"
          ]
        }
      },
      {
        "id": "miles",
        "type": "distance",
        "anchor": {
          "start": {
            "type": "equals",
            "text": "Load Details",
            "isCaseSensitive": true
          },
          "match": {
            "type": "regex",
            "pattern": "^[0-9]+ Miles$"
          },
          "end": "fax"
        },
        "method": {
          "id": "passthrough",
          "wordFilters": [
            "phone"
          ]
        }
      },
      {
        "id": "_trailer_type_raw",
        "method": {
          "id": "regex",
          "pattern": "^[0-9]* (REFEER|DRY VAN)$",
          "stop": {
            "text": "Hazmat",
            "type": "includes"
          }
        },
        "anchor": {
          "start": {
            "type": "startsWith",
            "text": "Equipment",
            "isCaseSensitive": true
          },
          "match": [
            {
              "text": "Trailer:",
              "type": "startsWith"
            }
          ],
          "end": {
            "text": "Requirements",
            "type": "startsWith"
          }
        }
      },
      {
        "id": "carrier_name",
        "anchor": {
          "match": [
            {
              "type": "equals",
              "text": "Carrier Contact",
              "isCaseSensitive": true
            }
          ]
        },
        "method": {
          "id": "label",
          "position": "below"
        }
      },
      {
        "id": "carrier_contact_name",
        "anchor": {
          "start": {
            "type": "equals",
            "text": "Carrier Contact",
            "isCaseSensitive": true
          },
          "match": [
            {
              "type": "startsWith",
              "text": "Attention:",
              "isCaseSensitive": true
            }
          ],
          "end": {
            "text": "e-mail",
            "type": "startsWith"
          }
        },
        "method": {
          "id": "label",
          "position": "right"
        }
      },
      {
        "id": "carrier_contact_email",
        "anchor": {
          "start": {
            "type": "equals",
            "text": "Carrier Contact",
            "isCaseSensitive": true
          },
          "match": [
            {
              "type": "startsWith",
              "text": "e-mail:",
              "isCaseSensitive": true
            }
          ],
          "end": {
            "text": "phone",
            "type": "endsWith"
          }
        },
        "method": {
          "id": "label",
          "position": "right"
        }
      },
      {
        "id": "carrier_contact_phone",
        "method": {
          "id": "regex",
          "pattern": "[0-9\\s\\(\\)\\+\\-]+ phone$",
          "wordFilters": [
            "phone"
          ]
        },
        "anchor": {
          "start": {
            "type": "startsWith",
            "text": "Carrier Contact",
            "isCaseSensitive": true
          },
          "match": [
            {
              "text": "e-mail",
              "type": "startsWith"
            }
          ],
          "end": {
            "text": "Carrier Services",
            "type": "includes"
          }
        }
      },
      {
        "id": "_load_comments",
        "type": "paragraph",
        "method": {
          "id": "documentRange",
          "includeAnchor": true,
          "stop": {
            "text": "Carrier Services",
            "type": "includes",
            "isCaseSensitive": true
          },
          "wordFilters": [
            "Requirements"
          ]
        },
        "anchor": {
          "start": {
            "text": "Carrier Contact",
            "type": "includes",
            "isCaseSensitive": true
          },
          "match": {
            "text": "Requirements",
            "type": "startsWith",
            "isCaseSensitive": true
          },
          "end": {
            "text": "Carrier Services",
            "type": "includes"
          }
        }
      },
      {
        "id": "_temperature_comments",
        "anchor": {
          "start": {
            "type": "equals",
            "text": "Equipment",
            "isCaseSensitive": true
          },
          "match": [
            {
              "type": "startsWith",
              "text": "Temperature Controlled:",
              "isCaseSensitive": true
            }
          ],
          "end": {
            "text": "Requirements",
            "type": "startsWith"
          }
        },
        "method": {
          "id": "label",
          "position": "right",
          "includeAnchor": true
        }
      },
      {
        "id": "_hazmat_comments",
        "anchor": {
          "start": {
            "type": "equals",
            "text": "Equipment",
            "isCaseSensitive": true
          },
          "match": [
            {
              "type": "startsWith",
              "text": "Hazmat:",
              "isCaseSensitive": true
            }
          ],
          "end": {
            "text": "Requirements",
            "type": "startsWith"
          }
        },
        "method": {
          "id": "label",
          "position": "right",
          "includeAnchor": true
        }
      },
      {
        "id": "shipper_name",
        "match": "all",
        "method": {
          "id": "label",
          "position": "below"
        },
        "anchor": {
          "start": {
            "text": "Comments",
            "type": "equals",
            "isCaseSensitive": true
          },
          "match": [
            {
              "text": "Shipper :",
              "type": "startsWith",
              "isCaseSensitive": true
            }
          ],
          "end": {
            "text": "Detention Payment",
            "type": "equals"
          }
        }
      },
      {
        "id": "shipper_phone",
        "match": "all",
        "method": {
          "id": "regex",
          "pattern": "[0-9\\s\\(\\)\\+\\-]+ phone$",
          "wordFilters": [
            "phone"
          ]
        },
        "anchor": {
          "start": {
            "text": "Comments",
            "type": "equals",
            "isCaseSensitive": true
          },
          "match": [
            {
              "text": "Shipper :",
              "type": "startsWith",
              "isCaseSensitive": true
            }
          ],
          "end": {
            "text": "Detention Payment",
            "type": "equals"
          }
        }
      },
      {
        "id": "_pickup_state",
        "match": "all",
        "method": {
          "id": "regex",
          "pattern": ",([A-Za-z\\s]+) [0-9]+$"
        },
        "anchor": {
          "start": {
            "text": "Comments",
            "type": "equals",
            "isCaseSensitive": true
          },
          "match": [
            {
              "text": "Shipper :",
              "type": "startsWith",
              "isCaseSensitive": true
            }
          ],
          "end": {
            "text": "Detention Payment",
            "type": "equals"
          }
        }
      },
      {
        "id": "shipper_number",
        "match": "all",
        "method": {
          "id": "label",
          "position": "right"
        },
        "anchor": {
          "start": {
            "text": "Shipper :",
            "type": "startsWith",
            "isCaseSensitive": true
          },
          "match": [
            {
              "text": "Shipper ID:",
              "type": "startsWith",
              "isCaseSensitive": true
            }
          ],
          "end": {
            "text": "Driving Directions",
            "type": "equals"
          }
        }
      },
      {
        "id": "_pickup_fulldatetime_raw",
        "match": "all",
        "method": {
          "id": "label",
          "position": "below"
        },
        "anchor": {
          "start": {
            "text": "Shipper :",
            "type": "startsWith",
            "isCaseSensitive": true
          },
          "match": [
            {
              "text": "Pickup",
              "type": "equals",
              "isCaseSensitive": true
            }
          ],
          "end": {
            "text": "Driving Directions",
            "type": "equals"
          }
        }
      },
      {
        "id": "_pickup_address_raw",
        "type": "address",
        "match": "all",
        "anchor": {
          "match": {
            "type": "startsWith",
            "text": "Shipper :"
          }
        },
        "method": {
          "id": "documentRange",
          "stop": {
            "type": "includes",
            "text": "phone"
          }
        }
      },
      {
        "id": "commodity",
        "match": "all",
        "method": {
          "id": "label",
          "position": "right"
        },
        "anchor": {
          "start": {
            "text": "Shipper :",
            "type": "startsWith",
            "isCaseSensitive": true
          },
          "match": [
            {
              "text": "Driver must ask for and receive",
              "type": "equals",
              "isCaseSensitive": true
            },
            {
              "text": "Commodity:",
              "type": "startsWith",
              "isCaseSensitive": true
            }
          ],
          "end": {
            "text": "Driving Directions",
            "type": "equals"
          }
        }
      },
      {
        "id": "pickup_weight",
        "type": "weight",
        "match": "all",
        "method": {
          "id": "label",
          "position": "right"
        },
        "anchor": {
          "start": {
            "text": "Shipper :",
            "type": "startsWith",
            "isCaseSensitive": true
          },
          "match": [
            {
              "text": "Driver must ask for and receive",
              "type": "equals",
              "isCaseSensitive": true
            },
            {
              "text": "Estimated Weight:",
              "type": "includes",
              "isCaseSensitive": true
            }
          ],
          "end": {
            "text": "Driving Directions",
            "type": "equals"
          }
        }
      },
      {
        "id": "pallets",
        "type": "number",
        "match": "all",
        "method": {
          "id": "label",
          "position": "left"
        },
        "anchor": {
          "start": {
            "text": "Shipper :",
            "type": "startsWith",
            "isCaseSensitive": true
          },
          "match": [
            {
              "text": "Driver must ask for and receive",
              "type": "equals",
              "isCaseSensitive": true
            },
            {
              "text": "PIECES",
              "type": "includes",
              "isCaseSensitive": true
            }
          ],
          "end": {
            "text": "Driving Directions",
            "type": "equals"
          }
        }
      },
      {
        "id": "pickup_instructions",
        "match": "all",
        "type": "paragraph",
        "method": {
          "id": "documentRange",
          "includeAnchor": true,
          "stop": {
            "text": "Consignee #",
            "type": "includes",
            "isCaseSensitive": true
          },
          "wordFilters": [
            "Driving Directions"
          ]
        },
        "anchor": {
          "start": {
            "text": "Shipper :",
            "type": "startsWith",
            "isCaseSensitive": true
          },
          "match": [
            {
              "text": "Shipper :",
              "type": "includes",
              "isCaseSensitive": true
            },
            {
              "text": "Driving Directions",
              "type": "startsWith",
              "isCaseSensitive": true
            }
          ],
          "end": {
            "text": "Detention Payment",
            "type": "startsWith",
            "isCaseSensitive": true
          }
        }
      },
      {
        "id": "consignee_name",
        "match": "all",
        "method": {
          "id": "label",
          "position": "below"
        },
        "anchor": {
          "start": {
            "text": "Comments",
            "type": "equals",
            "isCaseSensitive": true
          },
          "match": [
            {
              "text": "Consignee # ",
              "type": "startsWith",
              "isCaseSensitive": true
            }
          ],
          "end": {
            "text": "Detention Payment",
            "type": "equals"
          }
        }
      },
      {
        "id": "consignee_phone",
        "match": "all",
        "method": {
          "id": "regex",
          "pattern": "[0-9\\s\\(\\)\\+\\-]+ phone$",
          "wordFilters": [
            "phone"
          ]
        },
        "anchor": {
          "start": {
            "text": "Comments",
            "type": "equals",
            "isCaseSensitive": true
          },
          "match": [
            {
              "text": "Consignee # ",
              "type": "startsWith",
              "isCaseSensitive": true
            }
          ],
          "end": {
            "text": "Detention Payment",
            "type": "equals"
          }
        }
      },
      {
        "id": "_delivery_state",
        "match": "all",
        "method": {
          "id": "regex",
          "pattern": ",([A-Za-z\\s]+) [0-9]+$"
        },
        "anchor": {
          "start": {
            "text": "Comments",
            "type": "equals",
            "isCaseSensitive": true
          },
          "match": [
            {
              "text": "Consignee #",
              "type": "startsWith",
              "isCaseSensitive": true
            }
          ],
          "end": {
            "text": "Detention Payment",
            "type": "equals"
          }
        }
      },
      {
        "id": "consignee_number",
        "match": "all",
        "method": {
          "id": "label",
          "position": "right"
        },
        "anchor": {
          "start": {
            "text": "Consignee # ",
            "type": "startsWith",
            "isCaseSensitive": true
          },
          "match": [
            {
              "text": "Pickup #:",
              "type": "startsWith",
              "isCaseSensitive": true
            }
          ],
          "end": {
            "text": "Detention Payment",
            "type": "equals"
          }
        }
      },
      {
        "id": "_delivery_fulldatetime_raw",
        "match": "all",
        "method": {
          "id": "label",
          "position": "below"
        },
        "anchor": {
          "start": {
            "text": "Consignee # ",
            "type": "startsWith",
            "isCaseSensitive": true
          },
          "match": [
            {
              "text": "Delivery",
              "type": "equals",
              "isCaseSensitive": true
            }
          ],
          "end": {
            "text": "Detention Payment",
            "type": "equals"
          }
        }
      },
      {
        "id": "_delivery_address_raw",
        "type": "address",
        "match": "all",
        "anchor": {
          "match": {
            "type": "startsWith",
            "text": "Consignee # "
          }
        },
        "method": {
          "id": "documentRange",
          "stop": {
            "type": "includes",
            "text": "phone"
          }
        }
      },
      {
        "id": "delivery_instructions",
        "match": "all",
        "type": "paragraph",
        "method": {
          "id": "documentRange",
          "includeAnchor": true,
          "stop": {
            "pattern": "Consignee # |Detention Payment",
            "type": "regex"
          },
          "wordFilters": [
            "Driving Directions"
          ]
        },
        "anchor": {
          "start": {
            "text": "Consignee # ",
            "type": "startsWith",
            "isCaseSensitive": true
          },
          "match": [
            {
              "text": "Consignee # ",
              "type": "includes",
              "isCaseSensitive": true
            },
            {
              "text": "Driving Directions",
              "type": "startsWith",
              "isCaseSensitive": true
            }
          ],
          "end": {
            "text": "Detention Payment",
            "type": "startsWith",
            "isCaseSensitive": true
          }
        }
      }
    ],
    "computed_fields": [
      {
        "id": "broker_name",
        "method": {
          "id": "constant",
          "value": "jb_hunt"
        }
      },
      {
        "id": "general_notes",
        "method": {
          "id": "concat",
          "source_ids": [
            "_load_comments",
            "_temperature_comments",
            "_hazmat_comments"
          ],
          "delimiter": "\n"
        }
      },
      {
        "id": "_pickup_address_line_1_raw",
        "method": {
          "id": "split",
          "separator": ",\n",
          "source_id": "_pickup_address_raw",
          "index": 0
        }
      },
      {
        "id": "_pickup_address_line_1",
        "method": {
          "id": "split",
          "separator": " Pickup #:",
          "source_id": "_pickup_address_line_1_raw",
          "index": 0
        }
      },
      {
        "id": "_pickup_address_line_2",
        "method": {
          "id": "split",
          "separator": "\n",
          "source_id": "_pickup_address_raw",
          "index": 1
        }
      },
      {
        "id": "_pickup_city",
        "method": {
          "id": "split",
          "separator": ",",
          "source_id": "_pickup_address_line_2",
          "index": 0
        }
      },
      {
        "id": "_pickup_raw_state_zip_code",
        "method": {
          "id": "split",
          "separator": ",",
          "source_id": "_pickup_address_line_2",
          "index": 1
        }
      },
      {
        "id": "pickup_zip_code",
        "type": "number",
        "method": {
          "id": "split",
          "separator": ",",
          "source_id": "_pickup_address_line_2",
          "index": 1
        }
      },
      {
        "id": "_pickup_city_state",
        "method": {
          "id": "concat",
          "source_ids": [
            "_pickup_city",
            "_pickup_state"
          ],
          "delimiter": ", "
        }
      },
      {
        "id": "_pickup_address_final",
        "method": {
          "id": "concat",
          "source_ids": [
            "_pickup_address_line_1",
            "_pickup_city_state"
          ],
          "delimiter": ", "
        }
      },
      {
        "id": "_pickup_address_final_1",
        "method": {
          "id": "split",
          "separator": ",, ",
          "source_id": "_pickup_address_final",
          "index": 0
        }
      },
      {
        "id": "_pickup_address_final_2",
        "method": {
          "id": "split",
          "separator": ",, ",
          "source_id": "_pickup_address_final",
          "index": 1
        }
      },
      {
        "id": "pickup_address",
        "method": {
          "id": "concat",
          "source_ids": [
            "_pickup_address_final_1",
            "_pickup_address_final_2"
          ],
          "delimiter": ", "
        }
      },
      {
        "id": "_delivery_address_line_1_raw",
        "method": {
          "id": "split",
          "separator": ",\n",
          "source_id": "_delivery_address_raw",
          "index": 0
        }
      },
      {
        "id": "_delivery_address_line_1",
        "method": {
          "id": "split",
          "separator": " Pickup #:",
          "source_id": "_delivery_address_line_1_raw",
          "index": 0
        }
      },
      {
        "id": "_delivery_address_line_2",
        "method": {
          "id": "split",
          "separator": "\n",
          "source_id": "_delivery_address_raw",
          "index": 1
        }
      },
      {
        "id": "_delivery_city",
        "method": {
          "id": "split",
          "separator": ",",
          "source_id": "_delivery_address_line_2",
          "index": 0
        }
      },
      {
        "id": "_delivery_raw_state_zip_code",
        "method": {
          "id": "split",
          "separator": ",",
          "source_id": "_delivery_address_line_2",
          "index": 1
        }
      },
      {
        "id": "delivery_zip_code",
        "type": "number",
        "method": {
          "id": "split",
          "separator": ",",
          "source_id": "_delivery_address_line_2",
          "index": 1
        }
      },
      {
        "id": "_delivery_city_state",
        "method": {
          "id": "concat",
          "source_ids": [
            "_delivery_city",
            "_delivery_state"
          ],
          "delimiter": ", "
        }
      },
      {
        "id": "_delivery_address_final",
        "method": {
          "id": "concat",
          "source_ids": [
            "_delivery_address_line_1",
            "_delivery_city_state"
          ],
          "delimiter": ", "
        }
      },
      {
        "id": "_delivery_address_final_1",
        "method": {
          "id": "split",
          "separator": ",, ",
          "source_id": "_delivery_address_final",
          "index": 0
        }
      },
      {
        "id": "_delivery_address_final_2",
        "method": {
          "id": "split",
          "separator": ",, ",
          "source_id": "_delivery_address_final",
          "index": 1
        }
      },
      {
        "id": "delivery_address",
        "method": {
          "id": "concat",
          "source_ids": [
            "_delivery_address_final_1",
            "_delivery_address_final_2"
          ],
          "delimiter": ", "
        }
      },
      {
        "id": "_pickup_datetime",
        "method": {
          "id": "split",
          "source_id": "_pickup_fulldatetime_raw",
          "separator": " - ",
          "index": 0
        }
      },
      {
        "id": "_pickup_window_datetime",
        "method": {
          "id": "split",
          "source_id": "_pickup_fulldatetime_raw",
          "separator": " - ",
          "index": 1
        }
      },
      {
        "id": "_pickup_date_raw",
        "method": {
          "id": "split",
          "source_id": "_pickup_datetime",
          "separator": " ",
          "index": 0
        }
      },
      {
        "id": "_pickup_time_raw",
        "method": {
          "id": "split",
          "source_id": "_pickup_datetime",
          "separator": " ",
          "index": 1
        }
      },
      {
        "id": "_pickup_window_date_raw",
        "method": {
          "id": "split",
          "source_id": "_pickup_window_datetime",
          "separator": " ",
          "index": 0
        }
      },
      {
        "id": "_pickup_window_time_raw",
        "method": {
          "id": "split",
          "source_id": "_pickup_window_datetime",
          "separator": " ",
          "index": 1
        }
      },
      {
        "id": "pickup_date",
        "method": {
          "id": "concat",
          "source_ids": [
            "_pickup_date_raw",
            "_pickup_window_date_raw"
          ],
          "delimiter": " - "
        }
      },
      {
        "id": "pickup_time",
        "method": {
          "id": "concat",
          "source_ids": [
            "_pickup_time_raw",
            "_pickup_window_time_raw"
          ],
          "delimiter": " - "
        }
      },
      {
        "id": "_delivery_datetime",
        "method": {
          "id": "split",
          "source_id": "_delivery_fulldatetime_raw",
          "separator": " - ",
          "index": 0
        }
      },
      {
        "id": "_delivery_window_datetime",
        "method": {
          "id": "split",
          "source_id": "_delivery_fulldatetime_raw",
          "separator": " - ",
          "index": 1
        }
      },
      {
        "id": "_delivery_date_raw",
        "method": {
          "id": "split",
          "source_id": "_delivery_datetime",
          "separator": " ",
          "index": 0
        }
      },
      {
        "id": "_delivery_time_raw",
        "method": {
          "id": "split",
          "source_id": "_delivery_datetime",
          "separator": " ",
          "index": 1
        }
      },
      {
        "id": "_delivery_window_date_raw",
        "method": {
          "id": "split",
          "source_id": "_delivery_window_datetime",
          "separator": " ",
          "index": 0
        }
      },
      {
        "id": "_delivery_window_time_raw",
        "method": {
          "id": "split",
          "source_id": "_delivery_window_datetime",
          "separator": " ",
          "index": 1
        }
      },
      {
        "id": "delivery_date",
        "method": {
          "id": "concat",
          "source_ids": [
            "_delivery_date_raw",
            "_delivery_window_date_raw"
          ],
          "delimiter": " - "
        }
      },
      {
        "id": "delivery_time",
        "method": {
          "id": "concat",
          "source_ids": [
            "_delivery_time_raw",
            "_delivery_window_time_raw"
          ],
          "delimiter": " - "
        }
      },
      {
        "id": "trailer_type",
        "method": {
          "id": "mapper",
          "source_id": "_trailer_type_raw",
          "mappings": {
            "DRY VAN": "VAN"
          }
        }
      }
    ]
  }