{
  "fingerprint": {
    "tests": [
      {
        "page": "any",
        "match": [
          {
            "text": "progressive",
            "type": "includes"
          }
        ]
      }
    ]
  },
  "fields": [
    {
      "id": "policy_number",
      "method": {
        "id": "label",
        "position": "right"
      },
      "anchor": {
        "match": [
          {
            "text": "Policy Number:",
            "type": "startsWith"
          }
        ]
      }
    },
    {
      "id": "policy_premium",
      "type": "currency",
      "method": {
        "id": "row",
        "position": "right",
        "tiebreaker": ">"
      },
      "anchor": {
        "match": [
          {
            "pattern": "(month policy premium$|subtotal policy premium$)",
            "type": "regex",
            "flags": "i"
          }
        ]
      }
    },
    {
      "id": "fee_names",
      "match": "all",
      "method": {
        "id": "passthrough"
      },
      "anchor": {
        "start": [
          {
            "text": "Subtotal policy premium",
            "type": "includes"
          }
        ],
        "end": {
          "type": "regex",
          "pattern": "^Total|^\\+"
        },
        "match": [
          {
            "type": "regex",
            "pattern": "^(?!Subtotal|\\d|\\$).*"
          }
        ]
      }
    },
    {
      "id": "fee_names",
      "match": "all",
      "method": {
        "id": "passthrough"
      },
      "anchor": {
        "start": [
          {
            "text": "Outline of",
            "type": "includes"
          }
        ],
        "match": [
          {
            "pattern": "Fee$",
            "type": "regex",
            "flags": "i"
          }
        ]
      }
    },
    {
      "id": "fee_values",
      "match": "all",
      "type": "currency",
      "method": {
        "id": "row",
        "position": "right",
        "tiebreaker": "first"
      },
      "anchor": {
        "start": [
          {
            "text": "Subtotal policy premium",
            "type": "equals"
          }
        ],
        "end": {
          "type": "regex",
          "pattern": "^Total|^\\+"
        },
        "match": [
          {
            "type": "regex",
            "pattern": "^(?!Subtotal|\\d|\\$).*"
          }
        ]
      }
    },
    {
      "id": "fee_values",
      "match": "all",
      "type": "currency",
      "method": {
        "id": "row",
        "position": "right",
        "tiebreaker": "first"
      },
      "anchor": {
        "start": [
          {
            "text": "Outline of",
            "type": "includes"
          }
        ],
        "match": [
          {
            "pattern": "Fee$",
            "type": "regex",
            "flags": "i"
          }
        ]
      }
    },
    {
      "id": "total",
      "type": "currency",
      "method": {
        "id": "row",
        "position": "right",
        "tiebreaker": ">"
      },
      "anchor": {
        "match": [
          {
            "pattern": "policy premium if paid in full",
            "type": "regex"
          }
        ]
      }
    },
    {
      "id": "total",
      "type": "currency",
      "method": {
        "id": "row",
        "position": "right",
        "tiebreaker": ">"
      },
      "anchor": {
        "match": [
          {
            "pattern": "policy premium and fees$",
            "type": "regex"
          }
        ]
      }
    },
    {
      "id": "total",
      "type": "currency",
      "method": {
        "id": "row",
        "position": "right",
        "tiebreaker": ">"
      },
      "anchor": {
        "match": [
          {
            "pattern": "month policy premium$",
            "type": "regex"
          }
        ]
      }
    },
    {
      "id": "premium_period",
      "method": {
        "id": "regex",
        "pattern": "(6|12) month"
      },
      "anchor": {
        "start": [
          {
            "pattern": "^Outline of",
            "type": "regex"
          },
          {
            "pattern": "Total",
            "type": "regex"
          }
        ],
        "match": [
          {
            "pattern": "(6|12) month",
            "type": "regex"
          }
        ]
      }
    },
    {
      "id": "effective_date",
      "type": "date",
      "method": {
        "id": "label",
        "position": "right",
        "tiebreaker": "<"
      },
      "anchor": {
        "match": [
          {
            "text": "Policy Period:",
            "type": "startsWith"
          }
        ]
      }
    },
    {
      "id": "expiration_date",
      "type": "date",
      "method": {
        "id": "label",
        "position": "right",
        "tiebreaker": ">"
      },
      "anchor": {
        "match": [
          {
            "text": "Policy Period:",
            "type": "startsWith"
          }
        ]
      }
    },
    {
      "id": "address",
      "type": "address",
      "method": {
        "id": "region",
        "start": "left",
        "offsetX": -1,
        "offsetY": -1.8,
        "width": 2.24,
        "height": 1.8
      },
      "anchor": {
        "match": {
          "type": "any",
          "matches": [
            {
              "text": "Auto Insurance",
              "type": "startsWith"
            },
            {
              "text": "Motorcycle Insurance",
              "type": "startsWith"
            }
          ]
        }
      }
    },
    {
      "id": "named_insured",
      "match": "all",
      "type": "name",
      "method": {
        "id": "region",
        "start": "left",
        "offsetX": 0,
        "offsetY": 0,
        "width": 3,
        "height": 3,
        "lineFilters": [
          {
            "type": "startsWith",
            "text": "additional information"
          },
          {
            "type": "startsWith",
            "text": "eligible for"
          },
          {
            "type": "startsWith",
            "text": "total residents"
          },
          {
            "type": "startsWith",
            "text": "age"
          },
          {
            "type": "startsWith",
            "text": "marital status"
          },
          {
            "type": "startsWith",
            "text": "gender"
          },
          {
            "type": "startsWith",
            "text": "years experienced"
          },
          {
            "type": "includes",
            "text": "coverage"
          },
          {
            "type": "includes",
            "text": "uninsured"
          },
          {
            "type": "includes",
            "text": "underinsured"
          },
          {
            "type": "includes",
            "text": "form"
          },
          {
            "type": "startsWith",
            "text": "vin:"
          },
          {
            "type": "startsWith",
            "text": "garaging"
          },
          {
            "type": "includes",
            "text": "liability"
          },
          {
            "type": "startsWith",
            "text": "annual"
          },
          {
            "type": "includes",
            "text": "personal injury"
          },
          {
            "type": "regex",
            "pattern": "\\d"
          },
          {
            "type": "endsWith",
            "text": "fee"
          },
          {
            "type": "includes",
            "text": "premium"
          },
          {
            "type": "includes",
            "text": "payments"
          },
          {
            "type": "includes",
            "text": "accidental"
          },
          {
            "type": "includes",
            "text": "disability"
          },
          {
            "type": "includes",
            "text": "assistance"
          }
        ]
      },
      "anchor": {
        "match": {
          "text": "drivers and household residents",
          "type": "equals"
        }
      }
    },
    {
      "id": "named_insured",
      "match": "all",
      "type": "name",
      "method": {
        "id": "label",
        "includeAnchor": false,
        "position": "below",
        "textAlignment": "hangingIndent",
        "stop": "gap",
        "lineFilters": [
          {
            "type": "startsWith",
            "text": "additional information"
          },
          {
            "type": "startsWith",
            "text": "eligible for"
          },
          {
            "type": "startsWith",
            "text": "total residents"
          },
          {
            "type": "startsWith",
            "text": "age"
          },
          {
            "type": "startsWith",
            "text": "marital status"
          },
          {
            "type": "startsWith",
            "text": "gender"
          },
          {
            "type": "startsWith",
            "text": "years experienced"
          }
        ]
      },
      "anchor": {
        "match": {
          "text": "drivers and",
          "type": "startsWith"
        }
      }
    },
    {
      "id": "vehicle_year",
      "match": "all",
      "method": {
        "id": "regex",
        "pattern": "(\\d{4})"
      },
      "anchor": {
        "start": [
          {
            "text": "Outline of",
            "type": "startsWith"
          }
        ],
        "match": [
          {
            "pattern": "^\\d{4} ",
            "type": "regex"
          }
        ],
        "end": [
          {
            "text": "policy premium",
            "type": "includes"
          }
        ]
      }
    },
    {
      "id": "vin",
      "match": "all",
      "method": {
        "id": "label",
        "position": "right"
      },
      "anchor": {
        "match": [
          {
            "text": "VIN:",
            "type": "startsWith"
          }
        ]
      }
    },
    {
      "id": "vehicle_make",
      "match": "all",
      "method": {
        "id": "regex",
        "pattern": "^\\d{4} ([\\w-]+)"
      },
      "anchor": {
        "start": [
          {
            "text": "Outline of",
            "type": "startsWith"
          }
        ],
        "match": [
          {
            "pattern": "^\\d{4} .*",
            "type": "regex",
            "flags": "i"
          }
        ],
        "end": [
          {
            "text": "Premium discount",
            "type": "includes"
          }
        ]
      }
    },
    {
      "id": "vehicle_model",
      "match": "all",
      "method": {
        "id": "regex",
        "pattern": "^\\d{4} [\\w-]+ (.*)"
      },
      "anchor": {
        "start": [
          {
            "text": "Outline of",
            "type": "startsWith"
          }
        ],
        "match": [
          {
            "pattern": "^\\d{4} (.*)",
            "type": "regex",
            "flags": "i"
          }
        ],
        "end": [
          {
            "text": "Premium discount",
            "type": "includes"
          }
        ]
      }
    },
    {
      "id": "rental_reimbursement_per_day",
      "type": "currency",
      "method": {
        "id": "row",
        "position": "right",
        "tiebreaker": "first"
      },
      "anchor": {
        "match": {
          "type": "any",
          "matches": [
            {
              "text": "Rental reimbursement",
              "type": "startsWith"
            },
            {
              "text": "Increased Limits Transportation Expenses",
              "type": "startsWith"
            }
          ]
        }
      }
    },
    {
      "id": "collision_deductible",
      "type": "currency",
      "method": {
        "id": "row",
        "position": "right",
        "tiebreaker": "first",
        "xRangeFilter": {
          "start": "right",
          "offsetX": 0,
          "width": 5.2
        }
      },
      "anchor": {
        "match": [
          {
            "text": "Collision",
            "type": "equals"
          }
        ],
        "end": [
          {
            "pattern": "(Company officers|premium discounts)",
            "type": "regex",
            "flags": "i"
          }
        ]
      }
    },
    {
      "id": "collision_deductible",
      "type": "currency",
      "method": {
        "id": "row",
        "position": "right",
        "tiebreaker": "first",
        "xRangeFilter": {
          "start": "right",
          "offsetX": 0,
          "width": 5.2
        }
      },
      "anchor": {
        "match": [
          {
            "text": "Collision",
            "type": "includes"
          }
        ],
        "end": [
          {
            "pattern": "(Company officers|premium discounts)",
            "type": "regex",
            "flags": "i"
          }
        ]
      }
    },
    {
      "id": "collision_deductible",
      "type": "currency",
      "method": {
        "id": "intersection",
        "verticalAnchor": {
          "match": {
            "type": "equals",
            "text": "deductible"
          }
        }
      },
      "anchor": {
        "match": [
          {
            "type": "startsWith",
            "text": "collision"
          },
          {
            "type": "startsWith",
            "text": "limits:"
          }
        ],
        "end": [
          {
            "type": "startsWith",
            "text": "collision"
          },
          {
            "type": "startsWith",
            "text": "limits:"
          },
          {
            "type": "includes",
            "text": "premium"
          }
        ]
      }
    },
    {
      "id": "comprehensive_deductible",
      "type": "currency",
      "method": {
        "id": "row",
        "position": "right",
        "tiebreaker": "first",
        "xRangeFilter": {
          "start": "right",
          "offsetX": 0,
          "width": 5.2
        }
      },
      "anchor": {
        "match": {
          "type": "any",
          "matches": [
            {
              "text": "Comprehensive",
              "type": "startsWith"
            },
            {
              "text": "other than collision",
              "type": "startsWith"
            }
          ]
        },
        "end": [
          {
            "pattern": "(Company officers|premium discounts)",
            "type": "regex",
            "flags": "i"
          }
        ]
      }
    },
    {
      "id": "comprehensive_deductible",
      "type": "currency",
      "method": {
        "id": "intersection",
        "verticalAnchor": {
          "match": {
            "type": "equals",
            "text": "deductible"
          }
        }
      },
      "anchor": {
        "match": [
          {
            "type": "startsWith",
            "text": "comprehensive"
          },
          {
            "type": "startsWith",
            "text": "limits:"
          }
        ],
        "end": "collision"
      }
    },
    {
      "id": "collision_limit",
      "type": "currency",
      "method": {
        "id": "row",
        "tiebreaker": "first",
        "xRangeFilter": {
          "start": "right",
          "offsetX": 0,
          "width": 4
        }
      },
      "anchor": {
        "match": [
          {
            "text": "Collision",
            "type": "includes"
          }
        ],
        "end": [
          {
            "pattern": "(Company officers|premium discounts)",
            "type": "regex",
            "flags": "i"
          }
        ]
      }
    },
    {
      "id": "comprehensive_limit",
      "type": "currency",
      "method": {
        "id": "row",
        "tiebreaker": "first",
        "xRangeFilter": {
          "start": "right",
          "offsetX": 0,
          "width": 4
        }
      },
      "anchor": {
        "match": {
          "type": "any",
          "matches": [
            {
              "text": "Comprehensive",
              "type": "equals"
            },
            {
              "text": "other than collision",
              "type": "equals"
            }
          ]
        },
        "end": [
          {
            "pattern": "(Company officers|premium discounts)",
            "type": "regex",
            "flags": "i"
          }
        ]
      }
    },
    {
      "id": "uninsured_underinsured_property_damage_deductible",
      "type": "currency",
      "method": {
        "id": "row",
        "position": "right",
        "tiebreaker": "second",
        "lineFilters": [
          {
            "type": "regex",
            "pattern": "^(?!\\$).*"
          }
        ]
      },
      "anchor": {
        "match": [
          {
            "text": "Uninsured motorist property",
            "type": "includes"
          }
        ]
      }
    },
    {
      "id": "uninsured_underinsured_property_damage_deductible",
      "type": "currency",
      "method": {
        "id": "row",
        "position": "right",
        "tiebreaker": "second",
        "lineFilters": [
          {
            "type": "regex",
            "pattern": "^(?!\\$).*"
          }
        ]
      },
      "anchor": {
        "match": {
          "type": "any",
          "matches": [
            {
              "type": "includes",
              "text": "Uninsured/underinsured property"
            },
            {
              "type": "includes",
              "text": "Underinsured Motorist Property"
            }
          ]
        }
      }
    },
    {
      "id": "uninsured_underinsured_property_damage_deductible",
      "type": "currency",
      "method": {
        "id": "row",
        "position": "right",
        "lineFilters": [
          {
            "type": "regex",
            "pattern": "^(?!\\$).*"
          }
        ]
      },
      "anchor": {
        "match": [
          {
            "text": "Deductible Applies to Property Damage",
            "type": "startsWith"
          }
        ]
      }
    },
    {
      "id": "uninsured_underinsured_property_damage_deductible",
      "type": "currency",
      "method": {
        "id": "intersection",
        "verticalAnchor": {
          "match": {
            "text": "deductible",
            "type": "equals"
          }
        },
        "offsetX": -0.15
      },
      "anchor": {
        "start": {
          "text": "uninsured motorist",
          "type": "equals"
        },
        "match": [
          {
            "text": "property damage",
            "type": "startsWith"
          }
        ]
      }
    },
    {
      "id": "uninsured_underinsured_property_damage_per_accident",
      "type": "currency",
      "method": {
        "id": "row",
        "position": "right",
        "tiebreaker": "first"
      },
      "anchor": {
        "match": {
          "type": "any",
          "matches": [
            {
              "text": "Uninsured motorist property",
              "type": "includes"
            },
            {
              "text": "Uninsured motorists property",
              "type": "includes"
            }
          ]
        }
      }
    },
    {
      "id": "uninsured_underinsured_property_damage_per_accident",
      "type": "currency",
      "method": {
        "id": "label",
        "position": "left"
      },
      "anchor": {
        "start": {
          "text": "Property Protection Insurance",
          "type": "startsWith"
        },
        "match": [
          {
            "text": "each accident",
            "type": "includes"
          }
        ],
        "end": {
          "type": "regex",
          "pattern": "^[A-Z]"
        }
      }
    },
    {
      "id": "uninsured_underinsured_property_damage_per_accident",
      "type": "currency",
      "method": {
        "id": "row",
        "position": "right",
        "tiebreaker": "first"
      },
      "anchor": {
        "match": {
          "type": "any",
          "matches": [
            {
              "type": "includes",
              "text": "Uninsured/underinsured property"
            },
            {
              "type": "includes",
              "text": "Underinsured Motorist Property"
            }
          ]
        }
      }
    },
    {
      "id": "uninsured_underinsured_property_damage_per_accident",
      "type": "currency",
      "method": {
        "id": "row",
        "position": "right"
      },
      "anchor": {
        "start": {
          "text": "Uninsured/Underinsured Motorist",
          "type": "startsWith"
        },
        "match": [
          {
            "text": "Bodily Injury and Property Damage",
            "type": "equals"
          }
        ]
      }
    },
    {
      "id": "uninsured_underinsured_property_damage_per_accident",
      "type": "currency",
      "method": {
        "id": "row",
        "position": "right",
        "tiebreaker": "first",
        "xRangeFilter": {
          "start": "right",
          "offsetX": 0,
          "width": 4
        }
      },
      "anchor": {
        "start": {
          "text": "uninsured motorist",
          "type": "startsWith"
        },
        "match": {
          "text": "property damage",
          "type": "equals"
        }
      }
    },
    {
      "id": "uninsured_underinsured_motorist_bodily_injury_per_person",
      "type": "currency",
      "method": {
        "id": "row",
        "position": "right",
        "tiebreaker": "first",
        "xRangeFilter": {
          "start": "right",
          "offsetX": 0,
          "width": 4
        }
      },
      "anchor": {
        "match": [
          {
            "text": "Uninsured/Underinsured Motorist",
            "type": "startsWith"
          }
        ]
      }
    },
    {
      "id": "uninsured_underinsured_motorist_bodily_injury_per_person",
      "type": "currency",
      "method": {
        "id": "label",
        "position": "left"
      },
      "anchor": {
        "start": {
          "text": "Uninsured Motorist Property Damage",
          "type": "startsWith"
        },
        "match": [
          {
            "text": "each person",
            "type": "includes"
          }
        ],
        "end": {
          "type": "regex",
          "pattern": "^[A-Z]"
        }
      }
    },
    {
      "id": "uninsured_underinsured_motorist_bodily_injury_per_person",
      "type": "currency",
      "method": {
        "id": "row",
        "position": "right",
        "tiebreaker": "first",
        "xRangeFilter": {
          "start": "left",
          "offsetX": 0,
          "width": 5
        }
      },
      "anchor": {
        "match": {
          "type": "any",
          "matches": [
            {
              "type": "includes",
              "text": "Uninsured Motorist Bodily Injury"
            },
            {
              "type": "includes",
              "text": "Uninsured Motorists Bodily Injury"
            },
            {
              "type": "endsWith",
              "text": "Uninsured Motorist"
            },
            {
              "type": "includes",
              "text": "Underinsured Motorist"
            },
            {
              "type": "includes",
              "text": "Uninsured Motorist - Nonstacked"
            },
            {
              "type": "includes",
              "text": "Uninsured Motorist - Stacked"
            }
          ]
        }
      }
    },
    {
      "id": "uninsured_underinsured_motorist_bodily_injury_per_person",
      "type": "currency",
      "method": {
        "id": "row",
        "position": "right",
        "tiebreaker": "first",
        "xRangeFilter": {
          "start": "right",
          "offsetX": 0,
          "width": 5
        }
      },
      "anchor": {
        "start": {
          "text": "uninsured motorist",
          "type": "equals"
        },
        "match": [
          {
            "text": "bodily injury",
            "type": "equals"
          }
        ]
      }
    },
    {
      "id": "uninsured_underinsured_motorist_bodily_injury_per_accident",
      "type": "currency",
      "method": {
        "id": "row",
        "position": "right",
        "tiebreaker": "second",
        "xRangeFilter": {
          "start": "left",
          "offsetX": 0,
          "width": 4.9
        }
      },
      "anchor": {
        "match": {
          "type": "any",
          "matches": [
            {
              "type": "includes",
              "text": "Uninsured/Underinsured Motorist"
            },
            {
              "type": "includes",
              "text": "uninsured motorist"
            },
            {
              "type": "includes",
              "text": "Underinsured Motorist"
            }
          ]
        }
      }
    },
    {
      "id": "uninsured_underinsured_motorist_bodily_injury_per_accident",
      "type": "currency",
      "method": {
        "id": "row",
        "position": "right",
        "tiebreaker": "second"
      },
      "anchor": {
        "match": [
          {
            "text": "Uninsured Motorist Bodily Injury",
            "type": "startsWith"
          }
        ]
      }
    },
    {
      "id": "uninsured_underinsured_motorist_bodily_injury_per_accident",
      "type": "currency",
      "method": {
        "id": "row",
        "position": "right"
      },
      "anchor": {
        "start": {
          "text": "Uninsured/Underinsured Motorist",
          "type": "startsWith"
        },
        "match": [
          {
            "text": "Bodily Injury and Property Damage",
            "type": "equals"
          }
        ]
      }
    },
    {
      "id": "uninsured_underinsured_motorist_bodily_injury_per_accident",
      "type": "currency",
      "method": {
        "id": "row",
        "position": "right",
        "tiebreaker": "second",
        "xRangeFilter": {
          "start": "right",
          "offsetX": 0,
          "width": 5
        }
      },
      "anchor": {
        "start": {
          "text": "uninsured motorist",
          "type": "equals"
        },
        "match": [
          {
            "text": "bodily injury",
            "type": "equals"
          }
        ]
      }
    },
    {
      "id": "personal_injury_protection_per_accident",
      "type": "currency",
      "method": {
        "id": "label",
        "position": "left",
        "tiebreaker": "second"
      },
      "anchor": {
        "start": {
          "text": "Personal Injury Protection",
          "type": "equals"
        },
        "match": [
          {
            "text": "each accident",
            "type": "includes"
          }
        ],
        "end": {
          "text": "/accident",
          "type": "endsWith"
        }
      }
    },
    {
      "id": "personal_injury_protection_per_accident",
      "type": "currency",
      "method": {
        "id": "label",
        "position": "left"
      },
      "anchor": {
        "match": [
          {
            "text": "Personal Injury Protection",
            "type": "startsWith",
            "isCaseSensitive": true
          },
          {
            "text": "each person/each accident",
            "type": "endsWith"
          }
        ]
      }
    },
    {
      "id": "personal_injury_protection_per_accident",
      "type": "currency",
      "method": {
        "id": "row",
        "position": "right",
        "tiebreaker": ">",
        "lineFilters": [
          {
            "type": "endsWith",
            "text": "accidental death"
          }
        ],
        "xRangeFilter": {
          "start": "left",
          "offsetX": 0,
          "width": 5
        }
      },
      "anchor": {
        "match": {
          "type": "any",
          "matches": [
            {
              "type": "includes",
              "text": "Personal Protection"
            }
          ]
        }
      }
    },
    {
      "id": "personal_injury_protection_per_accident",
      "type": "currency",
      "method": {
        "id": "label",
        "position": "left"
      },
      "anchor": {
        "match": [
          {
            "text": "Personal Injury Protection - Nonstacked",
            "type": "equals",
            "isCaseSensitive": true
          },
          {
            "text": "economic loss",
            "type": "endsWith"
          }
        ]
      }
    },
    {
      "id": "personal_injury_protection_per_person",
      "type": "currency",
      "method": {
        "id": "row",
        "position": "right",
        "tiebreaker": "first",
        "xRangeFilter": {
          "start": "left",
          "offsetX": 0,
          "width": 5
        }
      },
      "anchor": {
        "match": {
          "type": "any",
          "matches": [
            {
              "type": "includes",
              "text": "personal injury"
            },
            {
              "type": "includes",
              "text": "Personal Protection"
            }
          ]
        }
      }
    },
    {
      "id": "personal_injury_protection_deductible",
      "type": "currency",
      "method": {
        "id": "intersection",
        "verticalAnchor": {
          "match": {
            "text": "deductible",
            "type": "equals"
          }
        }
      },
      "anchor": {
        "match": {
          "type": "any",
          "matches": [
            {
              "type": "includes",
              "text": "personal injury"
            },
            {
              "type": "includes",
              "text": "Personal Protection"
            }
          ]
        }
      }
    },
    {
      "id": "property_damage_liability_per_accident",
      "type": "currency",
      "method": {
        "id": "row",
        "position": "right",
        "tiebreaker": ">"
      },
      "anchor": {
        "match": [
          {
            "text": "Outline of",
            "type": "startsWith"
          },
          {
            "text": "Property damage",
            "type": "startsWith"
          }
        ]
      }
    },
    {
      "id": "property_damage_liability_per_accident",
      "type": "currency",
      "method": {
        "id": "label",
        "position": "below",
        "textAlignment": "hangingIndent",
        "tiebreaker": ">"
      },
      "anchor": {
        "match": [
          {
            "text": "Outline of",
            "type": "startsWith"
          },
          {
            "text": "Property damage",
            "type": "startsWith"
          }
        ]
      }
    },
    {
      "id": "property_damage_liability_per_accident",
      "type": "currency",
      "method": {
        "id": "row",
        "position": "right",
        "tiebreaker": ">"
      },
      "anchor": {
        "match": [
          {
            "text": "Liability to Others",
            "type": "equals"
          },
          {
            "text": "Bodily Injury and ",
            "type": "startsWith"
          }
        ]
      }
    },
    {
      "id": "bodily_injury_liability_per_person",
      "type": "currency",
      "method": {
        "id": "row",
        "position": "right",
        "tiebreaker": "first",
        "lineFilters": [
          {
            "type": "regex",
            "pattern": "^\\$\\d{3},\\d{3} combined single limit each accident$",
            "flags": "i"
          }
        ]
      },
      "anchor": {
        "match": [
          {
            "text": "Bodily injury",
            "type": "startsWith"
          }
        ]
      }
    },
    {
      "id": "bodily_injury_liability_per_person",
      "type": "currency",
      "method": {
        "id": "label",
        "position": "below",
        "textAlignment": "hangingIndent",
        "tiebreaker": "first",
        "lineFilters": [
          {
            "type": "includes",
            "text": "medical expense"
          }
        ]
      },
      "anchor": {
        "match": [
          {
            "text": "Bodily injury",
            "type": "startsWith"
          }
        ]
      }
    },
    {
      "id": "bodily_injury_liability_per_accident",
      "type": "currency",
      "method": {
        "id": "row",
        "position": "right",
        "tiebreaker": ">"
      },
      "anchor": {
        "match": [
          {
            "text": "Outline of",
            "type": "startsWith"
          },
          {
            "text": "bodily injury",
            "type": "startsWith"
          }
        ]
      }
    },
    {
      "id": "bodily_injury_liability_per_accident",
      "type": "currency",
      "method": {
        "id": "label",
        "position": "below",
        "textAlignment": "hangingIndent",
        "tiebreaker": "second"
      },
      "anchor": {
        "match": [
          {
            "text": "Bodily injury",
            "type": "startsWith"
          }
        ]
      }
    },
    {
      "id": "others_medical_payment_limit",
      "type": "currency",
      "method": {
        "id": "row",
        "position": "right",
        "tiebreaker": "first"
      },
      "anchor": {
        "match": {
          "type": "any",
          "matches": [
            {
              "text": "Medical Payments",
              "type": "includes"
            },
            {
              "text": "Medical expense benefits",
              "type": "includes"
            },
            {
              "text": "Medical expenses",
              "type": "equals"
            }
          ]
        }
      }
    },
    {
      "id": "others_medical_payment_limit",
      "type": "currency",
      "method": {
        "id": "passthrough"
      },
      "anchor": {
        "match": {
          "type": "any",
          "matches": [
            {
              "text": "Medical expense",
              "type": "endsWith"
            }
          ]
        }
      }
    },
    {
      "id": "_roadside_assistance",
      "method": {
        "id": "passthrough"
      },
      "anchor": {
        "start": {
          "text": "Outline of",
          "type": "startsWith"
        },
        "match": {
          "type": "any",
          "matches": [
            {
              "type": "equals",
              "text": "Roadside Assistance"
            },
            {
              "type": "equals",
              "text": "towing and labor costs"
            },
            {
              "type": "equals",
              "text": "towing and labor"
            }
          ]
        }
      }
    },
    {
      "id": "roadside_assistance_value",
      "type": "currency",
      "method": {
        "id": "label",
        "position": "left"
      },
      "anchor": {
        "start": {
          "text": "Outline of",
          "type": "startsWith"
        },
        "match": [
          {
            "type": "any",
            "matches": [
              {
                "type": "equals",
                "text": "Roadside Assistance"
              },
              {
                "type": "equals",
                "text": "towing and labor costs"
              },
              {
                "type": "equals",
                "text": "towing and labor"
              }
            ]
          },
          {
            "type": "endsWith",
            "text": "disablement"
          }
        ]
      }
    }
  ],
  "computed_fields": [
    {
      "id": "roadside_assistance",
      "type": "boolean",
      "method": {
        "id": "mapper",
        "source_id": "_roadside_assistance",
        "mappings": {
          "Roadside Assistance": "yes",
          "Towing and Labor": "yes",
          "Towing and Labor Costs": "yes"
        }
      }
    }
  ]
}